removeStrategy:
  rbac: SYNC
  items: NONE
items:
- kind: backupAndRestore
  name: backup
  blockBuildWhenDownstreamBuilding: false
  blockBuildWhenUpstreamBuilding: false
  buildersList:
  - backupBuilder:
      subjects:
      - buildRecordSubject: {}
      - jobConfigurationSubject: {}
      format:
        tarGzFormat: {}
      exclusive: true
      store:
        s3Store:
          bucketName: backup.cjoc.acaternberg.pscbdemos.com
          sse: true
          bucketFolder: controllers
          credentialsId: aws-credentials
          region: us-east-1
      retentionPolicy:
        upToNRetentionPolicy:
          n: 2
      safeDelaySeconds: 0
  concurrentBuild: false
  description: ''
  disabled: false
  displayName: backup
- kind: organizationFolder
  name: GHOrg
  description: ''
  displayName: GHOrg
  healthMetrics:
  - jobStatusHealthMetric:
      unstable: true
      countVirginJobs: false
      failure: true
      success: true
      unbuilt: true
  navigators:
  - github:
      apiUri: https://api.github.com
      traits:
      - gitHubBranchDiscovery:
          strategyId: 3
      - gitHubPullRequestDiscovery:
          strategyId: 2
      - gitHubForkDiscovery:
          trust:
            gitHubTrustPermissions: {}
          strategyId: 1
      - cloudBeesSCMReporting:
          visibleLinesOnly: false
          handlers:
          - endBuildError:
              maxLogLines: 100
          - stage:
              verbosity:
                all: {}
          - junit: {}
          - warningsNG: {}
      repoOwner: org-folderscan-example
      credentialsId: ghappci
  orphanedItemStrategy:
    defaultOrphanedItemStrategy:
      pruneDeadBranches: true
      daysToKeep: -1
      numToKeep: -1
      abortBuilds: false
  projectFactories:
  - customMultiBranchProjectFactory:
      factory:
        customBranchProjectFactory:
          marker: pom.xml
          definition:
            cpsScmFlowDefinition:
              scriptPath: templates/multibranchPipeline/Jenkinsfile
              scm:
                gitSCM:
                  userRemoteConfigs:
                  - userRemoteConfig:
                      credentialsId: github-user-ssh
                      url: git@github.com:pipeline-demo-caternberg/pipeline-examples.git
                  branches:
                  - branchSpec:
                      name: '*/master'
              lightweight: false
  strategy:
    allBranchesSame: {}
  trigger:
    periodicFolderTrigger:
      interval: 1d
- kind: cloudbeesTemplatedJob
  catalog: Pipeline Template Catalog Examples
  name: mytest
  model: Pipeline-Tem.c3qk18.log-Examples/multibranchPipeline
  attributes:
  - value: github-user-accesstoken
    key: githubToken
  - value: pipeline-demo-caternberg
    key: organsisation
  - value: spring-boot-demo
    key: repoName
  - value: mytest
    key: name
- kind: pipeline
  name: testmatrix
  concurrentBuild: true
  definition:
    cpsFlowDefinition:
      sandbox: true
      script: |
        library '_github.com_pipeline-demo-caternberg_pipeline_examples' _
        def kanikoPod = libraryResource 'podtemplates/podTemplate-kaniko.yaml'


        //git show --name-only --pretty="" --oneline HEAD

        //def dockerfiles = env.DOCKERFILES.split(",").findAll { it }.collect { it.trim() }
        //def dockerfiles =  ["Dockerfile1","Dockerfile2]


            stage('run-parallel') {
               // def files = findFiles glob: '**/Dockerfile*'
                def files =  ["Dockerfile1","Dockerfile2"]
                files.each { file -> println file }
                def parallelBranches = files.collectEntries { n ->
                    [(n): {
                         podTemplate(label: "mylabel-$n",yaml: '''
                             apiVersion: v1
                             kind: Pod
                             metadata:
                               name: kaniko
                             spec:
                               containers:
                                 - name: kaniko
                                   image: gcr.io/kaniko-project/executor:debug
                                   imagePullPolicy: Always
                                   command:
                                     - /busybox/cat
                                   tty: true
                                   volumeMounts:
                                     - name: jenkins-docker-cfg
                                       mountPath: /kaniko/.docker
                               volumes:
                                 - name: jenkins-docker-cfg
                                   projected:
                                     sources:
                                       - secret:
                                           name: docker-credentials
                                           items:
                                             - key: .dockerconfigjson
                                               path: config.json
                             ''') {
                             node("mylabel-$n") {
                                 stage ("build"){
                               container('kaniko') {
                                 echo POD_CONTAINER // displays 'kaniko'
                                 sh 'hostname'
                               }
                                 }
                             }
                         }
                    }]
                }

                parallel parallelBranches

            }
  description: ''
  disabled: false
  displayName: testmatrix
  resumeBlocked: false
